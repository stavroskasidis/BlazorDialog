@inject IBlazorDialogService dialogService

<ul>
    <li>You can use the <code>IBlazorDialogService</code> to open a component as a dialog and await for the result.</li>
    <li>You can pass any parameters to the component.</li>
    <li>You can receive any object as output.</li>
    <li>There are some optional build-in helper components like <code>DialogHeader</code>, <code>DialogBody</code>, <code>DialogFooter</code>. </li>
    <li>Use the <code>ParentDialog</code> cascading parameter to access the Dialog instance.</li>
    <li>Any number of nested dialogs are supported.</li>
</ul>
<div>
    <div class="form-inline">
        <label for="question" class="mr-sm-3">Question:</label>
        <input @bind="@question" class="mr-sm-3 form-control" />
        <label for="size" class="mr-sm-3">Size</label>
        <select class="form-control mr-sm-3" id="size" @bind="size">
            <option value="@DialogSize.Small">@DialogSize.Small</option>
            <option value="@DialogSize.Normal">@DialogSize.Normal</option>
            <option value="@DialogSize.Large">@DialogSize.Large</option>
            <option value="@DialogSize.ExtraLarge">@DialogSize.ExtraLarge</option>
            <option value="@DialogSize.ExtraExtraLarge">@DialogSize.ExtraExtraLarge</option>
            <option value="@DialogSize.FullScreen">@DialogSize.FullScreen</option>
        </select>

        <label for="animation" class="mr-sm-3">Animation</label>
        <select class="form-control mr-sm-3" id="animation" @bind="animation">
            <option value="@DialogAnimation.None">@DialogAnimation.None</option>
            <option value="@DialogAnimation.SlideDown">@DialogAnimation.SlideDown</option>
            <option value="@DialogAnimation.Zoom">@DialogAnimation.Zoom</option>
            <option value="@DialogAnimation.FadeIn">@DialogAnimation.FadeIn</option>
        </select>

        <div class="form-check mb-2 mr-sm-2">
            <input class="form-check-input" id="isCentered" type="checkbox" @bind="isCentered" />
            <label class="form-check-label" for="isCentered">Is centered</label>
        </div>

    </div>
</div>
<div class="mt-4">
    <button class="btn btn-primary" @onclick="ButtonOnClick">Show Dialog</button>
</div>

<div class="mt-3">DialogResult: <code>@dialogResult</code></div>

@code {
    string dialogResult = null;
    string question = "Do you agree ?";
    bool isCentered;
    DialogSize size;
    DialogAnimation animation;

    async Task ButtonOnClick()
    {
        dialogResult = null;

        dialogResult = await dialogService.ShowComponentAsDialog<string>(new ComponentAsDialogOptions(typeof(SimpleComponentDialog))
        {
            Animation = animation,
            Size = size,
            Centered = isCentered,
            Parameters = new()
            {
                { nameof(SimpleComponentDialog.Input), question }
            }
        });
    }

}
