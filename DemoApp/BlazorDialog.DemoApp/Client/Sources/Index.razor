@inject IBlazorDialogService dialogService

<ul>
    <li>You can use the IBlazorDialogService to call a dialog and await for the result.</li>
    <li>You can pass and receive any object as input or output.</li>
    <li>The dialog is searched by id, so it just has to exist somewhere in the app.</li>
</ul>
<div>
    <div class="form-inline">
        <label for="size" class="mr-sm-3">Size</label>
        <select class="form-control mr-sm-3" id="size" @bind="size">
            <option value="@DialogSize.Normal">@DialogSize.Normal</option>
            <option value="@DialogSize.Large">@DialogSize.Large</option>k
            <option value="@DialogSize.Small">@DialogSize.Small</option>
        </select>
        <div class="form-check mb-2 mr-sm-2">
            <input class="form-check-input" id="isCentered" type="checkbox" @bind="isCentered" />
            <label class="form-check-label" for="isCentered">Is centered</label>

        </div>
    </div>
</div>
<Dialog Id="simple-dialog" Size="size" Centered="isCentered">
    <DialogInputProvider TInput="string">
        <DialogBody>
            <h4>@context.Input</h4>
        </DialogBody>
        <DialogFooter>
            <button type="button" class="btn btn-primary" @onclick="@(() => context.Dialog.Hide("yes"))">Yes</button>
            <button type="button" class="btn btn-secondary" @onclick="@(()=> context.Dialog.Hide("no"))">No</button>
        </DialogFooter>
    </DialogInputProvider>
</Dialog>

<Dialog Id="simple-large-dialog" Size="size" Centered="isCentered">
    <DialogInputProvider TInput="string">
        <DialogHeader>
            <h4>@context.Input</h4>
        </DialogHeader>
        <DialogBody>
            <p>Lorem Ipsum</p>
            <p>
                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum quis est vitae purus eleifend bibendum id et neque. Sed eu nisi commodo, sagittis neque suscipit, euismod quam. In metus turpis, pulvinar ut odio vel, vehicula congue dui. Praesent sed feugiat est. Ut ut rhoncus mi, et facilisis eros. Vivamus malesuada nulla eu tincidunt vulputate. Donec non augue aliquam, sodales est vel, varius quam. Nam vel fringilla felis.

                Duis ultrices lorem id fringilla semper. Integer bibendum sagittis arcu in bibendum. Vivamus rhoncus feugiat leo accumsan bibendum. Aliquam ac turpis ut sem luctus laoreet. Donec sed tristique elit. Proin sit amet blandit dolor, eget aliquam mi. Nullam in ante aliquet, placerat turpis id, blandit enim. Donec sed ligula nisl. Ut varius vulputate suscipit. Nam at tristique odio.

                Cras tincidunt ex arcu, quis luctus felis aliquet non. Morbi eget eleifend elit, quis molestie est. Sed vitae nulla non massa efficitur vulputate condimentum condimentum mauris. Suspendisse potenti. Suspendisse potenti. Ut ornare, odio a lacinia accumsan, ante ante accumsan elit, sit amet fringilla nulla felis quis arcu. Vestibulum eget erat non leo fringilla fringilla. Cras sed massa ac sapien mollis congue at non lorem. Vivamus ut justo id turpis iaculis pretium. Fusce leo odio, fringilla id ante sit amet, viverra vehicula neque. Phasellus maximus nisi elit. Aenean vitae rutrum ex.

                Donec nibh ex, fringilla non tempus vel, rutrum feugiat orci. Donec diam massa, varius sit amet consequat scelerisque, congue ut nisl. Pellentesque scelerisque massa nisl, id aliquet justo facilisis nec. Donec consequat sapien ut quam eleifend, et laoreet tellus vehicula. Integer facilisis mauris nec pulvinar cursus. In quis magna elit. Praesent scelerisque, libero sed faucibus auctor, leo lectus blandit nisl, sit amet mattis dolor lacus vitae diam. Donec vitae neque eu ipsum porttitor facilisis. Sed a sagittis enim.

                Curabitur ac purus quis purus dictum aliquam at nec diam. Fusce est felis, auctor ut ex et, lobortis lacinia urna. Fusce egestas mi lorem, vel sagittis enim euismod dignissim. Nam porta nec sem sed malesuada. Ut non sollicitudin ex. Nam luctus sem a elit volutpat, in iaculis massa ultrices. Aliquam congue magna sem. Quisque mi elit, volutpat et mauris non, pellentesque commodo tellus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Suspendisse potenti. Interdum et malesuada fames ac ante ipsum primis in faucibus. Cras tincidunt a odio non scelerisque. Duis tincidunt a quam a lacinia. Vivamus nec justo gravida dui commodo vulputate. Nulla risus ante, vehicula id enim sit amet, vestibulum pellentesque nibh. Morbi a lectus semper, blandit mauris sed, tristique nibh.
            </p>

        </DialogBody>
        <DialogFooter>
            <button type="button" class="btn btn-primary" @onclick="@(()=> context.Dialog.Hide("yes"))">Yes</button>
            <button type="button" class="btn btn-secondary" @onclick="@(()=> context.Dialog.Hide("no"))">No</button>
        </DialogFooter>
    </DialogInputProvider>
</Dialog>

<div class="mt-4">
    <button class="btn btn-primary" @onclick="SimpleDialogOnClick">Simple Dialog</button>
    <button class="btn btn-secondary" @onclick="SimpleDialogBigOnClick">Simple Dialog Big</button>
</div>

@if (dialogResult != null)
{
    <div>DialogResult: @dialogResult</div>
}

@code{
    string dialogResult = null;
    bool isCentered;
    DialogSize size;

    async Task SimpleDialogOnClick()
    {
        dialogResult = await dialogService.ShowDialog<string>("simple-dialog", "(Simple Dialog) Are you sure?");
    }

    async Task SimpleDialogBigOnClick()
    {
        dialogResult = await dialogService.ShowDialog<string>("simple-large-dialog", "(Simple Dialog Large) Are you sure?");
    }
}