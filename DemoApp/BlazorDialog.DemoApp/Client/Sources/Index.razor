@inject IBlazorDialogService dialogService

<ul>
    <li>You can use the <code>IBlazorDialogService</code> to call a dialog and await for the result.</li>
    <li>You can pass and receive any object as input or output.</li>
    <li>The dialog is searched by id, so it can exist anywhere in the app.</li>
    <li>There are some optional build-in helper components like <code>DialogHeader</code>, <code>DialogBody</code>, <code>DialogFooter</code>. </li>
    <li>Use the <code>DialogInputProvider</code> component to access the input object that was passed when the dialog was called.</li>
</ul>
<div>
    <div class="form-inline">
        <label for="question" class="mr-sm-3">Question:</label>
        <input @bind="@question" />
    </div>
</div>

<div class="mt-4">
    <button class="btn btn-primary" @onclick="ButtonOnClick">Show Dialog</button>
</div>

<div class="mt-3">DialogResult: <code>@dialogResult</code></div>

@code{
    string dialogResult = null;
    string question = "Do you agree ?";

    async Task ButtonOnClick()
    {
        dialogResult = null;

        //The dialog exists in App.razor
        dialogResult = await dialogService.ShowDialog<string>("simple-dialog", question);
    }

}
